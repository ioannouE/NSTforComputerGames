#pragma kernel CSMain
 
#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
#include "Packages/com.unity.render-pipelines.high-definition/Runtime/ShaderLibrary/ShaderVariables.hlsl"

RW_TEXTURE2D_X(float4, _GBufferTexture0);
//RW_TEXTURE2D_X(float4, _StylizedTexture);
TEXTURE2D(_StylizedTexture);
SAMPLER(sampler_StylizedTexture);

[numthreads(32,32,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    //float4 myValue = _Source[ COORD_TEXTURE2D_X(id.xy, _Source) ];
    float4 color = float4(_StylizedTexture[id.xy].rgb, 0.2);
    //float4 color = _StylizedTexture.Sample(sampler_StylizedTexture, float2(id.xy)) * float4(1, 1, 0, 1);
    //float4 color = float4(1, 1, 0, 1);

    // _GBufferTexture0[ COORD_TEXTURE2D_X(id.xy, _GBufferTexture0) ] = float4(1, 0, 1, 0.5);
    _GBufferTexture0[uint3(id.xy, 0)].rgba = color; // float4(1, 1, 0, 1);
}
